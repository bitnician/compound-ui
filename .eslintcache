[{"/Applications/MAMP/htdocs/React/compound-interface/src/App.js":"1","/Applications/MAMP/htdocs/React/compound-interface/src/components/home.jsx":"2","/Applications/MAMP/htdocs/React/compound-interface/src/components/compound/supply.jsx":"3","/Applications/MAMP/htdocs/React/compound-interface/src/index.js":"4","/Applications/MAMP/htdocs/React/compound-interface/src/contexts/contractContext.js":"5","/Applications/MAMP/htdocs/React/compound-interface/src/components/compound/borrow.jsx":"6","/Applications/MAMP/htdocs/React/compound-interface/src/components/modal.jsx":"7","/Applications/MAMP/htdocs/React/compound-interface/src/components/tabs.jsx":"8","/Applications/MAMP/htdocs/React/compound-interface/src/contexts/ethContext.js":"9","/Applications/MAMP/htdocs/React/compound-interface/src/components/input.jsx":"10","/Applications/MAMP/htdocs/React/compound-interface/src/components/compound/modalForm.jsx":"11"},{"size":853,"mtime":1607367512156,"results":"12","hashOfConfig":"13"},{"size":1500,"mtime":1607367673610,"results":"14","hashOfConfig":"13"},{"size":11084,"mtime":1607427956471,"results":"15","hashOfConfig":"13"},{"size":500,"mtime":1606724783176,"results":"16","hashOfConfig":"13"},{"size":1753,"mtime":1606839767016,"results":"17","hashOfConfig":"13"},{"size":3757,"mtime":1606996727770,"results":"18","hashOfConfig":"13"},{"size":703,"mtime":1606840961311,"results":"19","hashOfConfig":"13"},{"size":1062,"mtime":1606828025522,"results":"20","hashOfConfig":"13"},{"size":520,"mtime":1606900101518,"results":"21","hashOfConfig":"13"},{"size":461,"mtime":1606844141470,"results":"22","hashOfConfig":"13"},{"size":2626,"mtime":1607426541147,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"12706r9",{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"35"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Applications/MAMP/htdocs/React/compound-interface/src/App.js",["52"],"/Applications/MAMP/htdocs/React/compound-interface/src/components/home.jsx",["53","54"],"import React, { useEffect, useContext } from 'react';\nimport { Jumbotron, Container, Row, Col } from 'reactstrap';\nimport { useWeb3Context } from 'web3-react';\nimport { EthContext } from '../contexts/ethContext';\nimport _ from 'lodash';\nimport Supply from './compound/supply';\nimport Borrow from './compound/borrow';\nimport Overview from './compound/overview';\n\nexport default function Home() {\n  const web3Context = useWeb3Context();\n\n  const { ethLibrary, setEthLibrary } = useContext(EthContext);\n\n  useEffect(() => {\n    web3Context.setFirstValidConnector(['MetaMask', 'Infura']);\n  }, []);\n\n  useEffect(() => {\n    console.log('Hi mate');\n\n    if (_.isEmpty(ethLibrary) && !_.isEmpty(web3Context.library)) {\n      console.log('Hi again from use effect');\n\n      setEthLibrary(web3Context.library.eth);\n    }\n  });\n\n  // let p;\n\n  // if (!web3Context.active && !web3Context.error) {\n  //   // loading\n  //   p = <p>loading</p>;\n  // } else if (web3Context.error) {\n  //   //error\n  //   p = <p>Error</p>;\n  // } else {\n  //   // success\n  //   p = <p>success,{web3Context.account}</p>;\n  // }\n\n  return (\n    <>\n      <div>\n        <header>\n          <Overview></Overview>\n        </header>\n        <main>\n          <Container>\n            <Row>\n              <Col xs=\"6\">\n                <Supply></Supply>\n              </Col>\n              <Col xs=\"6\">\n                <Borrow></Borrow>\n              </Col>\n            </Row>\n          </Container>\n        </main>\n      </div>\n    </>\n  );\n}\n",["55","56"],"/Applications/MAMP/htdocs/React/compound-interface/src/components/compound/supply.jsx",["57","58","59","60"],"import React, { Component } from 'react';\nimport ModalForm from './modalForm';\nimport { Table, CustomInput } from 'reactstrap';\nimport Web3 from 'web3';\nimport { EthContext } from '../../contexts/ethContext';\nimport abi from '../../abi/contracts.json';\nimport { roundToTwo } from '../../utils/utils';\n\nclass Supply extends Component {\n  static contextType = EthContext;\n\n  state = {\n    etherInfo: {\n      title: 'Ether',\n      supplyAPY: 12.4,\n      distributionAPY: 0,\n      borrowLimit: 7.07,\n      borrowLimitUsed: 0,\n      underlyingBalance: 0,\n      walletBalance: 0,\n      hasCollateral: false,\n      cContractAddress: process.env.REACT_APP_CETH_ADDRESS,\n      isErc20: false,\n    },\n    daiInfo: {\n      title: 'Dai',\n      supplyAPY: 10.4,\n      distributionAPY: 0,\n      borrowLimit: 1.07,\n      borrowLimitUsed: 0,\n      underlyingtBalance: 0,\n      walletBalance: 0,\n      hasCollateral: false,\n      cContractAddress: process.env.REACT_APP_CDAI_ADDRESS,\n      contractAddress: process.env.REACT_APP_DAI_ADDRESS,\n      isErc20: true,\n    },\n  };\n\n  async componentDidMount() {\n    const { daiInfo } = this.state;\n    await Promise.all([\n      await this.getUnderlyingBalanceOfEth(),\n      await this.getUnderlyingBalanceOfDai(),\n      await this.getBalanceOfEth(),\n      await this.getBalanceOfDai(),\n      await this.getAssetsIn(),\n      await this.isApproved(daiInfo),\n    ]);\n  }\n  handleOnChangeInput = ({ currentTarget: input }) => {\n    this.setState({\n      value: input.value,\n    });\n  };\n\n  handleOnChangeCollateral = async (e, assetInfo) => {\n    const web3 = new Web3(Web3.givenProvider);\n\n    const cContractAddress = assetInfo.cContractAddress;\n\n    const comptrollerAddress = process.env.REACT_APP_COMPTROLLER_ADDRESS;\n    const { abi: comptrollerAbiJson } = abi.Comptroller;\n    const comptrollerContract = new web3.eth.Contract(JSON.parse(comptrollerAbiJson), comptrollerAddress);\n\n    const accounts = await web3.eth.getAccounts();\n    const walletAddress = accounts[0];\n\n    if (assetInfo.hasCollateral) {\n      await comptrollerContract.methods.exitMarket(cContractAddress).send({\n        from: walletAddress,\n      });\n    }\n    if (!assetInfo.hasCollateral) {\n      await comptrollerContract.methods.enterMarkets([cContractAddress]).send({\n        from: walletAddress,\n      });\n    }\n  };\n\n  handleOnClickSupply = async () => {\n    const { value } = this.state;\n    const { ethLibrary } = this.context;\n\n    const contractAddress = process.env.REACT_APP_CETH_ADDRESS;\n    const { abi: abiJson } = abi.CEth;\n\n    const cEthContract = new ethLibrary.Contract(JSON.parse(abiJson), contractAddress);\n\n    const ethDecimals = 18;\n    const accounts = await ethLibrary.getAccounts();\n    const walletAddress = accounts[0];\n\n    await cEthContract.methods.mint().send({\n      from: walletAddress,\n      value: Web3.utils.toHex(Web3.utils.toWei(value.toString(), 'ether')),\n    });\n  };\n\n  handleOnClickWithdraw = async () => {\n    const { value } = this.state;\n    console.log('from withdraw', value);\n\n    const { ethLibrary } = this.context;\n\n    const contractAddress = process.env.REACT_APP_CETH_ADDRESS;\n    const { abi: abiJson } = abi.CEth;\n    const cEthContract = new ethLibrary.Contract(abiJson, contractAddress);\n\n    const ethDecimals = 18;\n    const accounts = await ethLibrary.getAccounts();\n    const walletAddress = accounts[0];\n\n    let cTokenBalance = (await cEthContract.methods.balanceOf(walletAddress).call()) / 1e8;\n\n    await cEthContract.methods.redeem(cTokenBalance * 1e8).send({\n      from: walletAddress,\n    });\n  };\n\n  isApproved = async (assetInfo) => {\n    const web3 = new Web3(Web3.givenProvider);\n\n    const daiContractAddress = assetInfo.contractAddress;\n    const cDaiContractAddress = assetInfo.cContractAddress;\n\n    const { abi: cErc20AbiJson } = abi.CErc20;\n\n    const daiContract = new web3.eth.Contract(JSON.parse(cErc20AbiJson), daiContractAddress);\n\n    const accounts = await web3.eth.getAccounts();\n    const walletAddress = accounts[0];\n\n    const result = await daiContract.methods.allowance(walletAddress, cDaiContractAddress).call({\n      from: walletAddress,\n    });\n\n    if (result && result > 0) {\n      assetInfo.isApproved = true;\n\n      this.setState({\n        daiInfo: assetInfo,\n      });\n    }\n  };\n\n  handleOnClickEnable = async (assetInfo) => {\n    const web3 = new Web3(Web3.givenProvider);\n\n    const daiContractAddress = assetInfo.contractAddress;\n    const cDaiContractAddress = assetInfo.cContractAddress;\n\n    const { abi: cErc20AbiJson } = abi.CErc20;\n\n    const daiContract = new web3.eth.Contract(JSON.parse(cErc20AbiJson), daiContractAddress);\n\n    const accounts = await web3.eth.getAccounts();\n    const walletAddress = accounts[0];\n\n    await daiContract.methods.approve(cDaiContractAddress, web3.utils.toBN(2 ^ 256)).send({\n      from: walletAddress,\n    });\n\n    assetInfo.isApproved = true;\n\n    this.setState({\n      daiInfo: assetInfo,\n    });\n  };\n\n  getBalanceOfEth = async () => {\n    const { etherInfo } = this.state;\n\n    const web3 = new Web3(Web3.givenProvider);\n\n    const accounts = await web3.eth.getAccounts();\n    const walletAddress = accounts[0];\n\n    const ethBalanceInWei = await web3.eth.getBalance(walletAddress);\n    const ethBalnceInEther = web3.utils.fromWei(ethBalanceInWei, 'ether');\n\n    etherInfo.walletBalance = roundToTwo(ethBalnceInEther);\n\n    this.setState({\n      etherInfo,\n    });\n  };\n  getBalanceOfDai = async () => {\n    const { daiInfo } = this.state;\n\n    const web3 = new Web3(Web3.givenProvider);\n\n    const daiContractAddress = process.env.REACT_APP_DAI_ADDRESS;\n\n    const { abi: cErc20AbiJson } = abi.CErc20;\n\n    const daiContract = new web3.eth.Contract(JSON.parse(cErc20AbiJson), daiContractAddress);\n\n    const accounts = await web3.eth.getAccounts();\n    const walletAddress = accounts[0];\n\n    const balanceOfDai = (await daiContract.methods.balanceOf(walletAddress).call()) / 1e18;\n\n    daiInfo.walletBalance = roundToTwo(balanceOfDai);\n\n    this.setState({\n      daiInfo,\n    });\n  };\n\n  getUnderlyingBalanceOfEth = async () => {\n    const { etherInfo } = this.state;\n\n    const web3 = new Web3(Web3.givenProvider);\n\n    const cEthContractAddress = process.env.REACT_APP_CETH_ADDRESS;\n\n    const { abi: cEthAbiJson } = abi.CEth;\n\n    const cEthContract = new web3.eth.Contract(JSON.parse(cEthAbiJson), cEthContractAddress);\n\n    const ethDecimals = 18;\n\n    const accounts = await web3.eth.getAccounts();\n    const walletAddress = accounts[0];\n    console.log(accounts);\n\n    const balanceOfEth =\n      Web3.utils.toBN(await cEthContract.methods.balanceOfUnderlying(walletAddress).call()) / Math.pow(10, ethDecimals);\n\n    let cTokenBalanceForEth = (await cEthContract.methods.balanceOf(walletAddress).call()) / 1e8;\n\n    etherInfo.underlyingBalance = roundToTwo(balanceOfEth);\n\n    this.setState({\n      etherInfo,\n    });\n  };\n  getUnderlyingBalanceOfDai = async () => {\n    const { daiInfo } = this.state;\n\n    const web3 = new Web3(Web3.givenProvider);\n\n    const cDaiContractAddress = process.env.REACT_APP_CDAI_ADDRESS;\n\n    const { abi: cErc20AbiJson } = abi.CErc20;\n\n    const cDaiContract = new web3.eth.Contract(JSON.parse(cErc20AbiJson), cDaiContractAddress);\n\n    const ethDecimals = 18;\n\n    const accounts = await web3.eth.getAccounts();\n    const walletAddress = accounts[0];\n    console.log(accounts);\n\n    const balanceOfDai =\n      Web3.utils.toBN(await cDaiContract.methods.balanceOfUnderlying(walletAddress).call()) / Math.pow(10, ethDecimals);\n\n    let cTokenBalanceForDai = (await cDaiContract.methods.balanceOf(walletAddress).call()) / 1e8;\n\n    daiInfo.underlyingtBalance = roundToTwo(balanceOfDai);\n\n    this.setState({\n      daiInfo,\n    });\n  };\n\n  getAssetsIn = async () => {\n    const { etherInfo, daiInfo } = this.state;\n    const web3 = new Web3(Web3.givenProvider);\n\n    const comptrollerAddress = process.env.REACT_APP_COMPTROLLER_ADDRESS;\n    const { abi: comptrollerAbiJson } = abi.Comptroller;\n\n    const comptrollerContract = new web3.eth.Contract(JSON.parse(comptrollerAbiJson), comptrollerAddress);\n\n    const accounts = await web3.eth.getAccounts();\n    const walletAddress = accounts[0];\n\n    const results = await comptrollerContract.methods.getAssetsIn(walletAddress).call();\n    if (results.includes(process.env.REACT_APP_CETH_ADDRESS)) {\n      etherInfo.hasCollateral = true;\n      this.setState({\n        etherInfo,\n      });\n    }\n    if (results.includes(process.env.REACT_APP_CDAI_ADDRESS)) {\n      daiInfo.hasCollateral = true;\n      this.setState({\n        daiInfo,\n      });\n    }\n  };\n\n  render() {\n    const { etherInfo, daiInfo } = this.state;\n\n    return (\n      <>\n        <h2 className=\"mb-5\">Supply</h2>\n        <Table borderless>\n          <thead>\n            <tr>\n              <th>Asset</th>\n              <th>APY</th>\n              <th>Wallet</th>\n              <th>Underlying</th>\n              <th>Collateral</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <th>\n                <ModalForm\n                  assetInfo={etherInfo}\n                  onChangeInput={this.handleOnChangeInput}\n                  onClickSupply={this.handleOnClickSupply}\n                  onClickWithdraw={this.handleOnClickWithdraw}\n                ></ModalForm>\n              </th>\n              <td>0.1%</td>\n              <td>{etherInfo.walletBalance}</td>\n              <td>{etherInfo.underlyingBalance}</td>\n              <td>\n                <div>\n                  {etherInfo.underlyingBalance ? (\n                    <CustomInput\n                      onChange={async (e) => await this.handleOnChangeCollateral(e, etherInfo)}\n                      type=\"switch\"\n                      checked={etherInfo.hasCollateral}\n                      id=\"swithEthCollateral\"\n                      name=\"customSwitch\"\n                    />\n                  ) : null}\n                </div>\n              </td>\n            </tr>\n          </tbody>\n          <tbody>\n            <tr>\n              <th>\n                <ModalForm\n                  assetInfo={daiInfo}\n                  onChangeInput={this.handleOnChangeInput}\n                  onClickSupply={this.handleOnClickSupply}\n                  onClickWithdraw={this.handleOnClickWithdraw}\n                  onClickEnable={this.handleOnClickEnable}\n                ></ModalForm>\n              </th>\n              <td>0.1%</td>\n              <td>{daiInfo.walletBalance}</td>\n              <td>{daiInfo.underlyingtBalance}</td>\n              <td>\n                <div>\n                  {daiInfo.underlyingtBalance ? (\n                    <CustomInput\n                      onChange={this.handleOnChangeCollateral}\n                      type=\"switch\"\n                      checked={daiInfo.hasCollateral}\n                      id=\"swithDaiCollateral\"\n                      name=\"customSwitch\"\n                    />\n                  ) : null}\n                </div>\n              </td>\n            </tr>\n          </tbody>\n        </Table>\n      </>\n    );\n  }\n}\n\nexport default Supply;\n","/Applications/MAMP/htdocs/React/compound-interface/src/index.js",[],["61","62"],"/Applications/MAMP/htdocs/React/compound-interface/src/contexts/contractContext.js",["63"],"/Applications/MAMP/htdocs/React/compound-interface/src/components/compound/borrow.jsx",["64","65","66","67","68","69","70"],"import React, { Component } from 'react';\nimport ModalForm from './modalForm';\nimport { Table, CustomInput, Container, Button } from 'reactstrap';\nimport Web3 from 'web3';\nimport { EthContext } from '../../contexts/ethContext';\nimport abi from '../../abi/contracts.json';\nimport Modal from '../modal';\nimport Input from '../input';\nimport Tabs from '../tabs';\n\nclass Supply extends Component {\n  static contextType = EthContext;\n\n  state = {\n    value: 0,\n  };\n\n  handleOnChangeInput = ({ currentTarget: input }) => {\n    this.setState({\n      value: input.value,\n    });\n  };\n\n  handleOnClickSupply = async () => {\n    const { value } = this.state;\n\n    const { ethLibrary } = this.context;\n\n    const contractAddress = process.env.REACT_APP_CETH_ADDRESS;\n    const abiJson = abi.cEthAbi;\n\n    const cEthContract = new ethLibrary.Contract(abiJson, contractAddress);\n\n    const ethDecimals = 18;\n    const accounts = await ethLibrary.getAccounts();\n    const walletAddress = accounts[0];\n\n    await cEthContract.methods.mint().send({\n      from: walletAddress,\n      value: Web3.utils.toHex(Web3.utils.toWei(value.toString(), 'ether')),\n    });\n  };\n\n  handleOnClickWithdraw = async () => {\n    const { value } = this.state;\n    console.log('from withdraw', value);\n\n    const { ethLibrary } = this.context;\n\n    const contractAddress = process.env.REACT_APP_CETH_ADDRESS;\n    const abiJson = abi.cEthAbi;\n    const cEthContract = new ethLibrary.Contract(abiJson, contractAddress);\n\n    const ethDecimals = 18;\n    const accounts = await ethLibrary.getAccounts();\n    const walletAddress = accounts[0];\n\n    let cTokenBalance = (await cEthContract.methods.balanceOf(walletAddress).call()) / 1e8;\n\n    await cEthContract.methods.redeem(cTokenBalance * 1e8).send({\n      from: walletAddress,\n    });\n  };\n\n  render() {\n    const etherInfo = {\n      title: 'Ether',\n      supplyAPY: 12.4,\n      distributionAPY: 0,\n      borrowLimit: 7.07,\n      borrowLimitUsed: 0,\n      walletBalance: 0.1386,\n    };\n    const daiInfo = {\n      title: 'Dai',\n      supplyAPY: 10.4,\n      distributionAPY: 0,\n      borrowLimit: 1.07,\n      borrowLimitUsed: 0,\n      walletBalance: 0.1386,\n    };\n    return (\n      <>\n        <h2 className=\"mb-5\">Supply</h2>\n        <Table borderless>\n          <thead>\n            <tr>\n              <th>Asset</th>\n              <th>APY</th>\n              <th>Wallet</th>\n              <th>Collateral</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <th>\n                <ModalForm\n                  assetInfo={etherInfo}\n                  onChangeInput={this.handleOnChangeInput}\n                  onClickSupply={this.handleOnClickSupply}\n                  onClickWithdraw={this.handleOnClickWithdraw}\n                ></ModalForm>\n              </th>\n              <td>0.1%</td>\n              <td>0</td>\n              <td>\n                <div>\n                  <CustomInput type=\"switch\" id=\"swithEthCollateral\" name=\"customSwitch\" />\n                </div>\n              </td>\n            </tr>\n          </tbody>\n          <tbody>\n            <tr>\n              <th>\n                <ModalForm\n                  assetInfo={daiInfo}\n                  onChangeInput={this.handleOnChangeInput}\n                  onClickSupply={this.handleOnClickSupply}\n                  onClickWithdraw={this.handleOnClickWithdraw}\n                ></ModalForm>\n              </th>\n              <td>0.1%</td>\n              <td>0</td>\n              <td>\n                <div>\n                  <CustomInput type=\"switch\" id=\"swithDaiCollateral\" name=\"customSwitch\" />\n                </div>\n              </td>\n            </tr>\n          </tbody>\n        </Table>\n      </>\n    );\n  }\n}\n\nexport default Supply;\n","/Applications/MAMP/htdocs/React/compound-interface/src/components/modal.jsx",["71","72","73"],"/Applications/MAMP/htdocs/React/compound-interface/src/components/tabs.jsx",["74","75","76","77"],"import React, { useState } from 'react';\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Card, Button, CardTitle, CardText, Row, Col } from 'reactstrap';\nimport classnames from 'classnames';\n\nconst TabExample = (props) => {\n  const [activeTab, setActiveTab] = useState(0);\n\n  const toggle = (tab) => {\n    if (activeTab !== tab) setActiveTab(tab);\n  };\n\n  return (\n    <div>\n      <Nav tabs>\n        {props.tabs.map((tab, i) => (\n          <NavItem>\n            <NavLink\n              style={{ cursor: 'pointer' }}\n              className={classnames({ active: activeTab === i })}\n              onClick={() => {\n                toggle(i);\n              }}\n            >\n              {tab.title}\n            </NavLink>\n          </NavItem>\n        ))}\n      </Nav>\n      <TabContent activeTab={activeTab}>\n        {props.tabs.map((tab, i) => (\n          <TabPane tabId={i}>\n            <Row>\n              <Col sm=\"12\">{tab.markUp}</Col>\n            </Row>\n          </TabPane>\n        ))}\n      </TabContent>\n    </div>\n  );\n};\n\nexport default TabExample;\n","/Applications/MAMP/htdocs/React/compound-interface/src/contexts/ethContext.js",["78"],"/Applications/MAMP/htdocs/React/compound-interface/src/components/input.jsx",[],"/Applications/MAMP/htdocs/React/compound-interface/src/components/compound/modalForm.jsx",[],{"ruleId":"79","severity":1,"message":"80","line":1,"column":8,"nodeType":"81","messageId":"82","endLine":1,"endColumn":12},{"ruleId":"79","severity":1,"message":"83","line":2,"column":10,"nodeType":"81","messageId":"82","endLine":2,"endColumn":19},{"ruleId":"84","severity":1,"message":"85","line":17,"column":6,"nodeType":"86","endLine":17,"endColumn":8,"suggestions":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"79","severity":1,"message":"92","line":90,"column":11,"nodeType":"81","messageId":"82","endLine":90,"endColumn":22},{"ruleId":"79","severity":1,"message":"92","line":110,"column":11,"nodeType":"81","messageId":"82","endLine":110,"endColumn":22},{"ruleId":"79","severity":1,"message":"93","line":231,"column":9,"nodeType":"81","messageId":"82","endLine":231,"endColumn":28},{"ruleId":"79","severity":1,"message":"94","line":259,"column":9,"nodeType":"81","messageId":"82","endLine":259,"endColumn":28},{"ruleId":"88","replacedBy":"95"},{"ruleId":"90","replacedBy":"96"},{"ruleId":"79","severity":1,"message":"97","line":17,"column":29,"nodeType":"81","messageId":"82","endLine":17,"endColumn":50},{"ruleId":"79","severity":1,"message":"98","line":3,"column":30,"nodeType":"81","messageId":"82","endLine":3,"endColumn":39},{"ruleId":"79","severity":1,"message":"99","line":3,"column":41,"nodeType":"81","messageId":"82","endLine":3,"endColumn":47},{"ruleId":"79","severity":1,"message":"100","line":7,"column":8,"nodeType":"81","messageId":"82","endLine":7,"endColumn":13},{"ruleId":"79","severity":1,"message":"101","line":8,"column":8,"nodeType":"81","messageId":"82","endLine":8,"endColumn":13},{"ruleId":"79","severity":1,"message":"102","line":9,"column":8,"nodeType":"81","messageId":"82","endLine":9,"endColumn":12},{"ruleId":"79","severity":1,"message":"92","line":34,"column":11,"nodeType":"81","messageId":"82","endLine":34,"endColumn":22},{"ruleId":"79","severity":1,"message":"92","line":54,"column":11,"nodeType":"81","messageId":"82","endLine":54,"endColumn":22},{"ruleId":"79","severity":1,"message":"99","line":2,"column":10,"nodeType":"81","messageId":"82","endLine":2,"endColumn":16},{"ruleId":"79","severity":1,"message":"103","line":2,"column":49,"nodeType":"81","messageId":"82","endLine":2,"endColumn":60},{"ruleId":"104","severity":1,"message":"105","line":13,"column":7,"nodeType":"106","endLine":13,"endColumn":104},{"ruleId":"79","severity":1,"message":"107","line":2,"column":54,"nodeType":"81","messageId":"82","endLine":2,"endColumn":58},{"ruleId":"79","severity":1,"message":"99","line":2,"column":60,"nodeType":"81","messageId":"82","endLine":2,"endColumn":66},{"ruleId":"79","severity":1,"message":"108","line":2,"column":68,"nodeType":"81","messageId":"82","endLine":2,"endColumn":77},{"ruleId":"79","severity":1,"message":"109","line":2,"column":79,"nodeType":"81","messageId":"82","endLine":2,"endColumn":87},{"ruleId":"79","severity":1,"message":"110","line":2,"column":10,"nodeType":"81","messageId":"82","endLine":2,"endColumn":24},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Jumbotron' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'web3Context'. Either include it or remove the dependency array.","ArrayExpression",["111"],"no-native-reassign",["112"],"no-negated-in-lhs",["113"],"'ethDecimals' is assigned a value but never used.","'cTokenBalanceForEth' is assigned a value but never used.","'cTokenBalanceForDai' is assigned a value but never used.",["112"],["113"],"'compoundContractNames' is assigned a value but never used.","'Container' is defined but never used.","'Button' is defined but never used.","'Modal' is defined but never used.","'Input' is defined but never used.","'Tabs' is defined but never used.","'ModalFooter' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Card' is defined but never used.","'CardTitle' is defined but never used.","'CardText' is defined but never used.","'useWeb3Context' is defined but never used.",{"desc":"114","fix":"115"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [web3Context]",{"range":"116","text":"117"},[590,592],"[web3Context]"]