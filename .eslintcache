[{"/Applications/MAMP/htdocs/React/sph-comp-webapp/src/index.js":"1","/Applications/MAMP/htdocs/React/sph-comp-webapp/src/network/connectors.js":"2","/Applications/MAMP/htdocs/React/sph-comp-webapp/src/components/menu.jsx":"3","/Applications/MAMP/htdocs/React/sph-comp-webapp/src/components/compound/borrow.jsx":"4","/Applications/MAMP/htdocs/React/sph-comp-webapp/src/components/tabs.jsx":"5","/Applications/MAMP/htdocs/React/sph-comp-webapp/src/components/input.jsx":"6","/Applications/MAMP/htdocs/React/sph-comp-webapp/src/components/home.jsx":"7","/Applications/MAMP/htdocs/React/sph-comp-webapp/src/App.js":"8","/Applications/MAMP/htdocs/React/sph-comp-webapp/src/components/compound/overview.jsx":"9","/Applications/MAMP/htdocs/React/sph-comp-webapp/src/utils/utils.js":"10","/Applications/MAMP/htdocs/React/sph-comp-webapp/src/components/compound/supply.jsx":"11","/Applications/MAMP/htdocs/React/sph-comp-webapp/src/components/modal.jsx":"12","/Applications/MAMP/htdocs/React/sph-comp-webapp/src/network/hooks.js":"13","/Applications/MAMP/htdocs/React/sph-comp-webapp/src/components/compound/modalForm.jsx":"14","/Applications/MAMP/htdocs/React/sph-comp-webapp/src/reportWebVitals.js":"15","/Applications/MAMP/htdocs/React/sph-comp-webapp/src/contexts/compoundLensContexts.js":"16"},{"size":956,"mtime":1608462340526,"results":"17","hashOfConfig":"18"},{"size":219,"mtime":1607703321938,"results":"19","hashOfConfig":"18"},{"size":1683,"mtime":1607770064760,"results":"20","hashOfConfig":"18"},{"size":7568,"mtime":1608553587540,"results":"21","hashOfConfig":"18"},{"size":1062,"mtime":1607701985631,"results":"22","hashOfConfig":"18"},{"size":461,"mtime":1607701985630,"results":"23","hashOfConfig":"18"},{"size":661,"mtime":1607709537846,"results":"24","hashOfConfig":"18"},{"size":257,"mtime":1607709634135,"results":"25","hashOfConfig":"18"},{"size":3046,"mtime":1608484321552,"results":"26","hashOfConfig":"18"},{"size":80,"mtime":1607701985634,"results":"27","hashOfConfig":"18"},{"size":10425,"mtime":1608377385120,"results":"28","hashOfConfig":"18"},{"size":703,"mtime":1607701985630,"results":"29","hashOfConfig":"18"},{"size":2376,"mtime":1607703325850,"results":"30","hashOfConfig":"18"},{"size":3950,"mtime":1608031097610,"results":"31","hashOfConfig":"18"},{"size":362,"mtime":1607701985633,"results":"32","hashOfConfig":"18"},{"size":6042,"mtime":1608576475833,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"tnd3av",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Applications/MAMP/htdocs/React/sph-comp-webapp/src/index.js",[],["79","80"],"/Applications/MAMP/htdocs/React/sph-comp-webapp/src/network/connectors.js",[],["81","82"],"/Applications/MAMP/htdocs/React/sph-comp-webapp/src/components/menu.jsx",["83","84","85","86","87","88"],"import React, { useState, useEffect } from 'react';\nimport { Navbar, NavbarBrand, NavbarText, Button } from 'reactstrap';\n\n//* Web3\nimport { useWeb3React } from '@web3-react/core';\nimport { useEagerConnect, useInactiveListener } from '../network/hooks';\nimport { MetaMask } from '../network/connectors';\n\n//* Ribmle UI\nimport NetworkIndicator from '@rimble/network-indicator';\n\nconst Menu = (props) => {\n  const web3Context = useWeb3React();\n  const [activatingConnector, setActivatingConnector] = useState();\n\n  const { connector, activate, deactivate, active, error, library, chainId, account } = web3Context;\n\n  useEffect(() => {\n    if (activatingConnector && activatingConnector === connector) {\n      setActivatingConnector(undefined);\n    }\n  }, [activatingConnector, connector]);\n\n  const triedEager = useEagerConnect();\n  useInactiveListener(!triedEager || !!activatingConnector);\n\n  return (\n    <div>\n      <Navbar color=\"light\" light expand=\"md\">\n        <NavbarBrand style={{ borderRight: '1px solid rgba(0,0,0,.5)', paddingRight: 15 }}>\n          <NetworkIndicator\n            currentNetwork={web3Context.chainId}\n            requiredNetwork={+process.env.REACT_APP_REQUIRED_NETWORK}\n          />\n        </NavbarBrand>\n        {web3Context.active ? (\n          <>\n            <NavbarText>Current Account: {web3Context.account}</NavbarText>\n          </>\n        ) : null}\n        {!web3Context.active ? (\n          <Button\n            onClick={() => {\n              activate(MetaMask);\n            }}\n            size=\"medium\"\n          >\n            Connect with MetaMask\n          </Button>\n        ) : null}\n      </Navbar>\n    </div>\n  );\n};\n\nexport default Menu;\n",["89","90"],"/Applications/MAMP/htdocs/React/sph-comp-webapp/src/components/compound/borrow.jsx",["91","92","93","94"],"/Applications/MAMP/htdocs/React/sph-comp-webapp/src/components/tabs.jsx",["95","96","97","98"],"import React, { useState } from 'react';\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Card, Button, CardTitle, CardText, Row, Col } from 'reactstrap';\nimport classnames from 'classnames';\n\nconst TabExample = (props) => {\n  const [activeTab, setActiveTab] = useState(0);\n\n  const toggle = (tab) => {\n    if (activeTab !== tab) setActiveTab(tab);\n  };\n\n  return (\n    <div>\n      <Nav tabs>\n        {props.tabs.map((tab, i) => (\n          <NavItem>\n            <NavLink\n              style={{ cursor: 'pointer' }}\n              className={classnames({ active: activeTab === i })}\n              onClick={() => {\n                toggle(i);\n              }}\n            >\n              {tab.title}\n            </NavLink>\n          </NavItem>\n        ))}\n      </Nav>\n      <TabContent activeTab={activeTab}>\n        {props.tabs.map((tab, i) => (\n          <TabPane tabId={i}>\n            <Row>\n              <Col sm=\"12\">{tab.markUp}</Col>\n            </Row>\n          </TabPane>\n        ))}\n      </TabContent>\n    </div>\n  );\n};\n\nexport default TabExample;\n","/Applications/MAMP/htdocs/React/sph-comp-webapp/src/components/input.jsx",[],["99","100"],"/Applications/MAMP/htdocs/React/sph-comp-webapp/src/components/home.jsx",["101"],"import React from 'react';\nimport { Row, Col, Container } from 'reactstrap';\nimport _ from 'lodash';\nimport Supply from './compound/supply';\nimport Borrow from './compound/borrow';\nimport Overview from './compound/overview';\n\nexport default function Home() {\n  return (\n    <>\n      <div>\n        <header>\n          <Overview></Overview>\n        </header>\n        <main>\n          <Container>\n            <Row>\n              <Col xs=\"6\">\n                <Supply></Supply>\n              </Col>\n              <Col xs=\"6\">\n                <Borrow></Borrow>\n              </Col>\n            </Row>\n          </Container>\n        </main>\n      </div>\n    </>\n  );\n}\n","/Applications/MAMP/htdocs/React/sph-comp-webapp/src/App.js",[],"/Applications/MAMP/htdocs/React/sph-comp-webapp/src/components/compound/overview.jsx",["102","103","104","105"],"/Applications/MAMP/htdocs/React/sph-comp-webapp/src/utils/utils.js",[],["106","107"],"/Applications/MAMP/htdocs/React/sph-comp-webapp/src/components/compound/supply.jsx",["108"],"import React, { useState, useCallback, useEffect } from 'react';\nimport { Table, CustomInput } from 'reactstrap';\nimport ModalForm from './modalForm';\nimport ABIs from '../../abi/contracts.json';\nimport { roundToTwo } from '../../utils/utils';\nimport _ from 'lodash';\nimport { useWeb3React } from '@web3-react/core';\nconst bigNumber = require('big-number');\n\nconst Supply = () => {\n  const eth = {\n    title: 'eth',\n    decimals: 18,\n    supplyAPY: 12.4,\n    distributionAPY: 0,\n    borrowLimit: 7.07,\n    borrowLimitUsed: 0,\n    underlyingBalance: 0,\n    cTokenBalance: 0,\n    walletBalance: 0,\n    hasCollateral: false,\n    cContractAddress: process.env.REACT_APP_CETH_ADDRESS,\n    cContractAbi: JSON.parse(ABIs.CEth.abi),\n    isErc20: false,\n  };\n\n  const dai = {\n    title: 'dai',\n    decimals: 18,\n    supplyAPY: 10.4,\n    distributionAPY: 0,\n    borrowLimit: 1.07,\n    borrowLimitUsed: 0,\n    underlyingBalance: 0,\n    cTokenBalance: 0,\n    walletBalance: 0,\n    hasCollateral: false,\n    cContractAddress: process.env.REACT_APP_CDAI_ADDRESS,\n    cContractAbi: JSON.parse(ABIs.CErc20.abi),\n    contractAddress: process.env.REACT_APP_DAI_ADDRESS,\n    isErc20: true,\n  };\n\n  const web3Context = useWeb3React();\n  const [assets, updateAssets] = useState([eth, dai]);\n  const [amount, setAmount] = useState(0);\n  const [comptroller] = useState({\n    address: process.env.REACT_APP_COMPTROLLER_ADDRESS,\n    abi: JSON.parse(ABIs.Comptroller.abi),\n  });\n\n  const getAssetsBalance = useCallback(\n    async (assets) => {\n      const walletAddress = web3Context.account;\n      const ethLibrary = web3Context.library.eth;\n\n      const assetsPromise = assets.map(async (item) => {\n        if (item.isErc20) {\n          const erc20Contract = new ethLibrary.Contract(item.cContractAbi, item.contractAddress);\n          const cErc20Contract = new ethLibrary.Contract(item.cContractAbi, item.cContractAddress);\n\n          const balanceOfUnderlyingErc20 =\n            (await cErc20Contract.methods.balanceOfUnderlying(walletAddress).call()) / Math.pow(10, item.decimals);\n\n          const balanceOfWelletErc20 =\n            (await erc20Contract.methods.balanceOf(walletAddress).call()) / Math.pow(10, item.decimals);\n\n          item.underlyingBalance = roundToTwo(balanceOfUnderlyingErc20);\n          item.walletBalance = roundToTwo(balanceOfWelletErc20);\n\n          return item;\n        }\n\n        if (!item.isErc20) {\n          const balanceInWei = await ethLibrary.getBalance(walletAddress);\n          const balnceOfEtherWallet = web3Context.library.utils.fromWei(balanceInWei, 'ether');\n\n          const cEthContract = new ethLibrary.Contract(item.cContractAbi, item.cContractAddress);\n\n          const balanceOfUnderlyingEth =\n            web3Context.library.utils.toBN(await cEthContract.methods.balanceOfUnderlying(walletAddress).call()) /\n            Math.pow(10, item.decimals);\n\n          item.walletBalance = roundToTwo(balnceOfEtherWallet);\n          item.underlyingBalance = roundToTwo(balanceOfUnderlyingEth);\n\n          return item;\n        }\n      });\n\n      const updatedAssets = await Promise.all(assetsPromise);\n      return updatedAssets;\n      // updateAssets(updatedAssets);\n    },\n    [web3Context]\n  );\n\n  const isApproved = useCallback(\n    async (assets) => {\n      const walletAddress = web3Context.account;\n      const ethLibrary = web3Context.library.eth;\n\n      const updatedAssetsPromis = assets.map(async (item) => {\n        if (item.isErc20) {\n          const erc20ContractAddress = item.contractAddress;\n          const cErc20ContractAddress = item.cContractAddress;\n\n          const erc20Contract = new ethLibrary.Contract(item.cContractAbi, erc20ContractAddress);\n\n          const result = await erc20Contract.methods.allowance(walletAddress, cErc20ContractAddress).call({\n            from: walletAddress,\n          });\n\n          if (result && result > 0) {\n            item.isApproved = true;\n          }\n        }\n\n        return item;\n      });\n\n      const updatedAssets = await Promise.all(updatedAssetsPromis);\n      return updatedAssets;\n\n      // updateAssets(updatedAssets);\n    },\n    [web3Context]\n  );\n\n  const getAssetsIn = useCallback(\n    async (assets) => {\n      const walletAddress = web3Context.account;\n      const ethLibrary = web3Context.library.eth;\n\n      const comptrollerContract = new ethLibrary.Contract(comptroller.abi, comptroller.address);\n\n      const results = await comptrollerContract.methods.getAssetsIn(walletAddress).call();\n\n      const updatedAssets = assets.map((item) => {\n        if (results.includes(item.cContractAddress)) {\n          item.hasCollateral = true;\n        }\n        return item;\n      });\n\n      return updatedAssets;\n\n      // updateAssets(updatedAssets);\n    },\n    [web3Context, comptroller]\n  );\n\n  const updateAssetState = useCallback(async () => {\n    let updatedAssets = await getAssetsBalance(assets);\n    updatedAssets = await isApproved(updatedAssets);\n    updatedAssets = await getAssetsIn(updatedAssets);\n    updateAssets(updatedAssets);\n  }, [assets, getAssetsBalance, isApproved, getAssetsIn]);\n\n  useEffect(() => {\n    if (web3Context.active) {\n      updateAssetState();\n    }\n  }, [updateAssetState, web3Context]);\n\n  const handleOnChangeAmount = useCallback(({ currentTarget: input }) => {\n    setAmount(input.value);\n  }, []);\n\n  const handleOnClickEnable = useCallback(\n    async (asset) => {\n      const walletAddress = web3Context.account;\n      const ethLibrary = web3Context.library.eth;\n\n      const erc20ContractAddress = asset.contractAddress;\n      const cErc20ContractAddress = asset.cContractAddress;\n\n      const erc20Contract = new ethLibrary.Contract(asset.cContractAbi, erc20ContractAddress);\n\n      const unlimitedAmount = bigNumber(2).power(256).minus(1);\n      await erc20Contract.methods.approve(cErc20ContractAddress, unlimitedAmount).send({\n        from: walletAddress,\n      });\n\n      const updatedAssets = assets.map((item) => {\n        if (item === asset) {\n          item.isApproved = true;\n          return item;\n        }\n        return item;\n      });\n      updateAssets(updatedAssets);\n    },\n    [web3Context, assets]\n  );\n\n  const handleOnChangeCollateral = useCallback(\n    async (e, asset) => {\n      const walletAddress = web3Context.account;\n      const ethLibrary = web3Context.library.eth;\n\n      const cContractAddress = asset.cContractAddress;\n\n      const comptrollerContract = new ethLibrary.Contract(comptroller.abi, comptroller.address);\n\n      if (asset.hasCollateral) {\n        await comptrollerContract.methods.exitMarket(cContractAddress).send({\n          from: walletAddress,\n        });\n        const updatedAssets = assets.map((item) => {\n          if (item === asset) {\n            item.hasCollateral = false;\n            return item;\n          }\n          return item;\n        });\n        updateAssets(updatedAssets);\n      }\n\n      if (!asset.hasCollateral) {\n        await comptrollerContract.methods.enterMarkets([cContractAddress]).send({\n          from: walletAddress,\n        });\n        const updatedAssets = assets.map((item) => {\n          if (item === asset) {\n            item.hasCollateral = true;\n            return item;\n          }\n          return item;\n        });\n        updateAssets(updatedAssets);\n      }\n    },\n    [web3Context, assets, comptroller]\n  );\n\n  const handleOnClickSupply = useCallback(\n    async (asset) => {\n      const walletAddress = web3Context.account;\n      const ethLibrary = web3Context.library.eth;\n\n      const contractInstance = new ethLibrary.Contract(asset.cContractAbi, asset.cContractAddress);\n\n      if (asset.isErc20) {\n        const supplyAmount = amount * Math.pow(10, asset.decimals);\n\n        await contractInstance.methods.mint(web3Context.library.utils.toBN(supplyAmount.toString())).send({\n          from: walletAddress,\n        });\n      }\n      if (!asset.isErc20) {\n        await contractInstance.methods.mint().send({\n          from: walletAddress,\n          value: web3Context.library.utils.toHex(web3Context.library.utils.toWei(amount.toString(), 'ether')),\n        });\n      }\n    },\n    [web3Context, amount]\n  );\n\n  const handleOnClickWithdraw = useCallback(\n    async (asset) => {\n      const walletAddress = web3Context.account;\n      const ethLibrary = web3Context.library.eth;\n\n      const contractInstance = new ethLibrary.Contract(asset.cContractAbi, asset.cContractAddress);\n\n      if (asset.isErc20) {\n        const withdrawAmount = amount * Math.pow(10, asset.decimals);\n\n        await contractInstance.methods\n          .redeemUnderlying(web3Context.library.utils.toBN(withdrawAmount.toString()))\n          .send({\n            from: walletAddress,\n          });\n      }\n      if (!asset.isErc20) {\n        await contractInstance.methods\n          .redeemUnderlying(web3Context.library.utils.toWei(amount.toString(), 'ether'))\n          .send({\n            from: walletAddress,\n          });\n      }\n    },\n    [web3Context, amount]\n  );\n\n  return (\n    <>\n      <h2 className=\"mb-5\">Supply</h2>\n      <Table borderless>\n        <thead>\n          <tr>\n            <th>Asset</th>\n            <th>APY</th>\n            <th>Wallet</th>\n            <th>Underlying</th>\n            <th>Collateral</th>\n          </tr>\n        </thead>\n        <tbody>\n          {assets.map((asset) => (\n            <tr>\n              <th>\n                <ModalForm\n                  type=\"supply\"\n                  assetInfo={asset}\n                  onChangeInput={handleOnChangeAmount}\n                  onClickSupply={handleOnClickSupply}\n                  onClickWithdraw={handleOnClickWithdraw}\n                  onClickEnable={handleOnClickEnable}\n                ></ModalForm>\n              </th>\n              <td>0.1%</td>\n              <td>{asset.walletBalance}</td>\n              <td>{asset.underlyingBalance}</td>\n              <td>\n                <div>\n                  <CustomInput\n                    onChange={async (e) => await handleOnChangeCollateral(e, asset)}\n                    type=\"switch\"\n                    checked={asset.hasCollateral}\n                    id=\"swithEthCollateral\"\n                    name=\"customSwitch\"\n                    disabled={asset.underlyingBalance ? false : true}\n                  />\n                </div>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n        <tbody></tbody>\n      </Table>\n    </>\n  );\n};\n\nexport default Supply;\n","/Applications/MAMP/htdocs/React/sph-comp-webapp/src/components/modal.jsx",["109","110","111"],"import React, { useState } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nconst ModalExample = (props) => {\n  const { buttonLabel, modalTitle, className } = props;\n\n  const [modal, setModal] = useState(false);\n\n  const toggle = () => setModal(!modal);\n\n  return (\n    <div>\n      <a onClick={toggle} style={{ cursor: 'pointer', color: '#01c5c4', textDecoration: 'underline' }}>\n        {buttonLabel}\n      </a>\n      <Modal isOpen={modal} toggle={toggle} className={className}>\n        <ModalHeader toggle={toggle}>{modalTitle}</ModalHeader>\n        <ModalBody>{props.children}</ModalBody>\n      </Modal>\n    </div>\n  );\n};\n\nexport default ModalExample;\n",["112","113"],"/Applications/MAMP/htdocs/React/sph-comp-webapp/src/network/hooks.js",["114"],"import { useState, useEffect } from 'react';\nimport { useWeb3React } from '@web3-react/core';\nimport { MetaMask } from './connectors';\n\nexport function useEagerConnect() {\n  const { activate, active } = useWeb3React();\n\n  const [tried, setTried] = useState(false);\n\n  useEffect(() => {\n    MetaMask.isAuthorized().then((isAuthorized) => {\n      if (isAuthorized) {\n        activate(MetaMask, undefined, true).catch(() => {\n          setTried(true);\n        });\n      } else {\n        setTried(true);\n      }\n    });\n  }, []); // intentionally only running on mount (make sure it's only mounted once :))\n\n  // if the connection worked, wait until we get confirmation of that to flip the flag\n  useEffect(() => {\n    if (!tried && active) {\n      setTried(true);\n    }\n  }, [tried, active]);\n\n  return tried;\n}\n/**\n *\n * @param suppress\n */\nexport function useInactiveListener(suppress = false) {\n  const { active, error, activate } = useWeb3React();\n\n  useEffect(() => {\n    const { ethereum } = window;\n    if (ethereum && ethereum.on && !active && !error && !suppress) {\n      const handleConnect = () => {\n        console.log(\"Handling 'connect' event\");\n        activate(MetaMask);\n      };\n      const handleChainChanged = (chainId) => {\n        console.log(\"Handling 'chainChanged' event with payload\", chainId);\n        activate(MetaMask);\n      };\n      const handleAccountsChanged = (accounts) => {\n        console.log(\"Handling 'accountsChanged' event with payload\", accounts);\n        if (accounts.length > 0) {\n          activate(MetaMask);\n        }\n      };\n      const handleNetworkChanged = (networkId) => {\n        console.log(\"Handling 'networkChanged' event with payload\", networkId);\n        activate(MetaMask);\n      };\n\n      ethereum.on('connect', handleConnect);\n      ethereum.on('chainChanged', handleChainChanged);\n      ethereum.on('accountsChanged', handleAccountsChanged);\n      ethereum.on('networkChanged', handleNetworkChanged);\n\n      return () => {\n        if (ethereum.removeListener) {\n          ethereum.removeListener('connect', handleConnect);\n          ethereum.removeListener('chainChanged', handleChainChanged);\n          ethereum.removeListener('accountsChanged', handleAccountsChanged);\n          ethereum.removeListener('networkChanged', handleNetworkChanged);\n        }\n      };\n    }\n  }, [active, error, suppress, activate]);\n}\n",["115","116"],"/Applications/MAMP/htdocs/React/sph-comp-webapp/src/components/compound/modalForm.jsx",[],"/Applications/MAMP/htdocs/React/sph-comp-webapp/src/reportWebVitals.js",[],"/Applications/MAMP/htdocs/React/sph-comp-webapp/src/contexts/compoundLensContexts.js",["117","118","119"],{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"120","replacedBy":"124"},{"ruleId":"122","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":16,"column":32,"nodeType":"128","messageId":"129","endLine":16,"endColumn":42},{"ruleId":"126","severity":1,"message":"130","line":16,"column":44,"nodeType":"128","messageId":"129","endLine":16,"endColumn":50},{"ruleId":"126","severity":1,"message":"131","line":16,"column":52,"nodeType":"128","messageId":"129","endLine":16,"endColumn":57},{"ruleId":"126","severity":1,"message":"132","line":16,"column":59,"nodeType":"128","messageId":"129","endLine":16,"endColumn":66},{"ruleId":"126","severity":1,"message":"133","line":16,"column":68,"nodeType":"128","messageId":"129","endLine":16,"endColumn":75},{"ruleId":"126","severity":1,"message":"134","line":16,"column":77,"nodeType":"128","messageId":"129","endLine":16,"endColumn":84},{"ruleId":"120","replacedBy":"135"},{"ruleId":"122","replacedBy":"136"},{"ruleId":"126","severity":1,"message":"137","line":2,"column":17,"nodeType":"128","messageId":"129","endLine":2,"endColumn":28},{"ruleId":"126","severity":1,"message":"138","line":6,"column":10,"nodeType":"128","messageId":"129","endLine":6,"endColumn":20},{"ruleId":"126","severity":1,"message":"139","line":124,"column":13,"nodeType":"128","messageId":"129","endLine":124,"endColumn":24},{"ruleId":"140","severity":1,"message":"141","line":182,"column":5,"nodeType":"142","endLine":182,"endColumn":50,"suggestions":"143"},{"ruleId":"126","severity":1,"message":"144","line":2,"column":54,"nodeType":"128","messageId":"129","endLine":2,"endColumn":58},{"ruleId":"126","severity":1,"message":"145","line":2,"column":60,"nodeType":"128","messageId":"129","endLine":2,"endColumn":66},{"ruleId":"126","severity":1,"message":"146","line":2,"column":68,"nodeType":"128","messageId":"129","endLine":2,"endColumn":77},{"ruleId":"126","severity":1,"message":"147","line":2,"column":79,"nodeType":"128","messageId":"129","endLine":2,"endColumn":87},{"ruleId":"120","replacedBy":"148"},{"ruleId":"122","replacedBy":"149"},{"ruleId":"126","severity":1,"message":"150","line":3,"column":8,"nodeType":"128","messageId":"129","endLine":3,"endColumn":9},{"ruleId":"126","severity":1,"message":"151","line":4,"column":20,"nodeType":"128","messageId":"129","endLine":4,"endColumn":31},{"ruleId":"126","severity":1,"message":"152","line":5,"column":8,"nodeType":"128","messageId":"129","endLine":5,"endColumn":12},{"ruleId":"126","severity":1,"message":"138","line":6,"column":10,"nodeType":"128","messageId":"129","endLine":6,"endColumn":20},{"ruleId":"140","severity":1,"message":"153","line":25,"column":3,"nodeType":"128","endLine":25,"endColumn":12,"suggestions":"154"},{"ruleId":"120","replacedBy":"155"},{"ruleId":"122","replacedBy":"156"},{"ruleId":"126","severity":1,"message":"150","line":6,"column":8,"nodeType":"128","messageId":"129","endLine":6,"endColumn":9},{"ruleId":"126","severity":1,"message":"145","line":2,"column":10,"nodeType":"128","messageId":"129","endLine":2,"endColumn":16},{"ruleId":"126","severity":1,"message":"157","line":2,"column":49,"nodeType":"128","messageId":"129","endLine":2,"endColumn":60},{"ruleId":"158","severity":1,"message":"159","line":13,"column":7,"nodeType":"160","endLine":13,"endColumn":104},{"ruleId":"120","replacedBy":"161"},{"ruleId":"122","replacedBy":"162"},{"ruleId":"140","severity":1,"message":"163","line":20,"column":6,"nodeType":"142","endLine":20,"endColumn":8,"suggestions":"164"},{"ruleId":"120","replacedBy":"165"},{"ruleId":"122","replacedBy":"166"},{"ruleId":"126","severity":1,"message":"167","line":2,"column":3,"nodeType":"128","messageId":"129","endLine":2,"endColumn":12},{"ruleId":"126","severity":1,"message":"168","line":33,"column":17,"nodeType":"128","messageId":"129","endLine":33,"endColumn":36},{"ruleId":"169","severity":1,"message":"170","line":142,"column":35,"nodeType":"171","messageId":"172","endLine":142,"endColumn":39},"no-native-reassign",["173"],"no-negated-in-lhs",["174"],["173"],["174"],"no-unused-vars","'deactivate' is assigned a value but never used.","Identifier","unusedVar","'active' is assigned a value but never used.","'error' is assigned a value but never used.","'library' is assigned a value but never used.","'chainId' is assigned a value but never used.","'account' is assigned a value but never used.",["173"],["174"],"'CustomInput' is defined but never used.","'roundToTwo' is defined but never used.","'daiContract' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback has an unnecessary dependency: 'amount'. Either exclude it or remove the dependency array.","ArrayExpression",["175"],"'Card' is defined but never used.","'Button' is defined but never used.","'CardTitle' is defined but never used.","'CardText' is defined but never used.",["173"],["174"],"'_' is defined but never used.","'useCallback' is defined but never used.","'ABIs' is defined but never used.","React Hook useEffect contains a call to 'setLensValue'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [web3Context.active, lensContext.compoundLensValues] as a second argument to the useEffect Hook.",["176"],["173"],["174"],"'ModalFooter' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["173"],["174"],"React Hook useEffect has a missing dependency: 'activate'. Either include it or remove the dependency array.",["177"],["173"],["174"],"'Component' is defined but never used.","'erc20CTokenContract' is assigned a value but never used.","no-eval","eval can be harmful.","CallExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"178","fix":"179"},{"desc":"180","fix":"181"},{"desc":"182","fix":"183"},"Update the dependencies array to be: [web3Context, comptroller, priceFeed]",{"range":"184","text":"185"},"Add dependencies array: [web3Context.active, lensContext.compoundLensValues]",{"range":"186","text":"187"},"Update the dependencies array to be: [activate]",{"range":"188","text":"189"},[5546,5591],"[web3Context, comptroller, priceFeed]",[1127,1127],", [web3Context.active, lensContext.compoundLensValues]",[521,523],"[activate]"]